Index: main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//#include <iostream>\r\n#include <string.h>\r\n//#include <cstring>\r\n#include <stdio.h>\r\n#include <malloc.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n#include <stdlib.h>\r\n#include <limits.h>\r\n\r\n\r\ntypedef struct card Card;\r\ntypedef struct moves Moves;\r\n\r\n// Array of the different suits, Clubs, Diamonds, Hearts and Spades\r\nconst char suits[] = {'C', 'D', 'H', 'S'};\r\nchar ranks[] = {'A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'};\r\n\r\n//Array consisting of the initial number of cards turned face down;\r\nint facedown[7];\r\n\r\nchar *command_approver = \"OK\";\r\nbool play = false;\r\n// Foundations\r\nCard *foundations[4];\r\n//Columns\r\nCard *columns[7];\r\n//header pointing at moves struct, used in undo command\r\nMoves *latest;\r\nchar redo_command[10];\r\n\r\nstruct card {\r\n    Card *prev;\r\n    Card *next;\r\n    char rank;\r\n    char suit;\r\n};\r\n\r\nCard *new_card(char rank, char suit){\r\n    Card *card = (Card *)malloc(sizeof(Card));\r\n    card->prev = NULL;\r\n    card->next = NULL;\r\n    card->rank = rank;\r\n    card->suit = suit;\r\n    return card;\r\n}\r\n\r\nstruct moves {\r\n    Moves *prev;\r\n    char command[10];\r\n};\r\n\r\nvoid redo(\r\n        );\r\n\r\nvoid update_redo();\r\n\r\n//moves will be implemented as a stack, hence why there is only a pointer to a prev node.\r\nMoves *new_move(char *command){\r\n    Moves *moves = (Moves *)malloc(sizeof(Moves));\r\n    moves->prev = NULL;\r\n    int i = 0;\r\n    while(*command != '\\0'){\r\n        moves->command[i] = *command;\r\n        command++;\r\n        i++;\r\n    }\r\n    return moves;\r\n}\r\n\r\nvoid update_undo_header(char *command){\r\n    Moves *prev = latest;\r\n    latest = new_move(command);\r\n    latest->prev = prev;\r\n}\r\n\r\nvoid initialize_undo(){\r\n    bool init = false;\r\n    if(!init) {\r\n        latest = new_move(\"UNDO\");\r\n        init = true;\r\n    }\r\n}\r\n\r\nCard *default_deck(){\r\n    //Initialize deck, with a dummy bottom card\r\n    Card *head = new_card('B', 'B');\r\n    Card *current = head;\r\n    for (int suit = 0; suit < 4; suit++) {\r\n        for (int rank = 0; rank < 13; rank++) {\r\n            Card *newCard = new_card(ranks[rank], suits[suit]);\r\n            current->next = newCard;\r\n            head->prev = newCard;\r\n            newCard->prev = current;\r\n            newCard->next = head;\r\n            current = newCard;\r\n        }\r\n    }\r\n    return head;\r\n}\r\n\r\n//Still needs work - currently only takes input file and prints content to terminal\r\nCard *load_deck(char* filename){\r\n    FILE* ptr;\r\n    char ch;\r\n    char check_cards[52][2];\r\n    int n = 0;\r\n\r\n    ptr = fopen(filename, \"r\");\r\n\r\n    if (NULL == ptr) {\r\n        printf(\"File doesn't exist\\n\");\r\n    }\r\n\r\n    // Add dummy card to bottom\r\n    Card *head = new_card('B', 'B');\r\n    Card *current = head;\r\n\r\n    char input[3]; // char array to hold line characters for input\r\n\r\n    // Do-while that reads an entire line, creates a new card and adds it to the deck\r\n    do {\r\n\r\n        for (int i = 0; i < 3; ++i) {\r\n            ch = fgetc(ptr);\r\n            input[i] = ch;\r\n        }\r\n        Card *newCard = new_card(input[0], input[1]);\r\n        current->next = newCard;\r\n        head->prev = newCard;\r\n        newCard->prev = current;\r\n        newCard->next = head;\r\n        current = newCard;\r\n        snprintf(check_cards[n],4,\"%c%c\",newCard->rank, newCard->suit);\r\n        for (int i = 0; i < n; ++i) {\r\n            if(check_cards[i][0] == newCard->rank && check_cards[i][1] == newCard->suit){\r\n                printf(\"Card: %c%c is a dublicate card\\nLine: %i of %s\", check_cards[i][0], check_cards[i][1], n+1, filename);\r\n                free(newCard);\r\n                return 0;\r\n            }\r\n        }\r\n        n++;\r\n\r\n        // Checking if character is not EOF.\r\n        // If it is EOF stop reading.\r\n    } while (ch != EOF);\r\n\r\n    // Closing the file\r\n    fclose(ptr);\r\n    return head;\r\n}\r\nvoid *save_cards(Card *deck, char* filename){\r\n    FILE* ptr;\r\n\r\n    ptr = fopen(filename, \"w+\");\r\n    do {\r\n        deck = deck->next;\r\n        fprintf(ptr,\"%c%c\\n\", deck->rank, deck->suit);\r\n    }while(deck->next->rank != 'B');\r\n\r\n\r\n    // Closing the file\r\n    fclose(ptr);\r\n}\r\n\r\nvoid update_facedown(int index){\r\n    if(facedown[index] != 0)\r\n        facedown[index]--;\r\n}\r\n\r\nvoid error_message(){\r\n    command_approver = \"Invalid action..!\";\r\n}\r\n\r\nint find_string_length(const char *string){\r\n    int size = 0;\r\n    for (int i = 0; i < strlen(string); ++i) {\r\n        if(string[i] != ' ') {\r\n            size++;\r\n        }\r\n    }\r\n    return size;\r\n}\r\n\r\n//method to find pile ie foundation or column, to start searching for a card.\r\n//If the given pile doesn't exist the method will return a null pointer.\r\nCard *get_pile(char rank,char suit){\r\n    Card *temp = NULL;\r\n    for (int i = 0; i < ((sizeof(columns) / sizeof(columns[0])) + sizeof(foundations) / sizeof(foundations[0])) ; ++i) {\r\n        if (i >= 7){\r\n            if(foundations[i % 7]->rank == rank && foundations[i % 7]->suit == suit)\r\n                temp = foundations[i % 7];\r\n        }\r\n        else if(columns[i % 7]->rank == rank && columns[i % 7]->suit == suit){\r\n            temp = columns[i];\r\n            break;\r\n        }\r\n    }\r\n    return temp;\r\n}\r\n\r\nCard *find_card(char rank,char suit,Card *ptr){\r\n    Card *pile = ptr;\r\n    while(ptr->next != pile || (ptr->rank != rank && ptr->suit != suit)){\r\n        ptr = ptr->next;\r\n        if(ptr->rank == rank && ptr->suit == suit)\r\n            return ptr;\r\n    }\r\n    if(ptr->rank != rank && ptr->suit != suit || (ptr->prev == pile && ptr->next == pile)){ //Checks if the specified card, is the dummy card + checking if the card exists\r\n        error_message();\r\n        return NULL;\r\n    }\r\n    return ptr;\r\n}\r\n\r\nvoid move_bunch(Card *from, Card *frompile, Card *to, Card *topile){\r\n    Card *temp = from;\r\n\r\n    while(temp->next != frompile){\r\n        temp = temp->next;\r\n    }\r\n\r\n    from->prev->next = frompile;\r\n    frompile->prev = from->prev;\r\n\r\n    topile->prev = temp;\r\n    temp->next = topile;\r\n    from->prev = to;\r\n    to->next = from;\r\n}\r\n\r\nvoid move_card(Card *from,Card *to){\r\n    Card *temp = from;\r\n    temp->prev->next = temp->next;\r\n    temp->next->prev = temp->prev;\r\n\r\n    temp->next = to->next;\r\n    to->next = temp;\r\n    temp->prev = to;\r\n}\r\n\r\n// Helper method for interleave_shuffle\r\nCard *split_deck(Card *deck, int amount){\r\n    Card *temp_deck = deck;\r\n\r\n    //First actual card in deck\r\n    temp_deck = temp_deck->next;\r\n    // Loop to find spot to split\r\n    for (int i = 0; i < amount; ++i) {\r\n        temp_deck = temp_deck->next;\r\n    }\r\n\r\n    temp_deck->prev->next = NULL;\r\n    temp_deck->prev = NULL;\r\n\r\n    Card *part = temp_deck; // Variable for holding split part of deck\r\n    return part;\r\n}\r\n\r\n\r\nCard *interleave_shuffle(Card *head, int amount){\r\n    Card *new_deck_head = new_card('B', 'B'); // Variable for holding interleaved deck\r\n    Card *new_deck = new_deck_head;\r\n    Card *part;\r\n    //If amount == 0, just return original deck\r\n    if (amount > 52) {\r\n        printf(\"Amount too large, pick lower amount!!\");\r\n        return new_deck;\r\n    }\r\n    if (amount == 0 || amount == 52){\r\n        return head;\r\n    }\r\n\r\n    part = split_deck(head, amount);\r\n\r\n    Card *deck_next = head->next;\r\n    deck_next->prev = NULL;\r\n    // Deck now has first actual card\r\n\r\n    while(deck_next != NULL && deck_next->rank != 'B'){\r\n        // Add card from first pile to new_deck\r\n        new_deck->next = new_card(deck_next->rank, deck_next->suit);\r\n        new_deck->next->prev = new_deck;\r\n        new_deck = new_deck->next;\r\n\r\n        // Update first pile pointer\r\n        deck_next = deck_next->next;\r\n\r\n        //Check if card is the last card in second pile\r\n        if(part->next == NULL || part->next->rank == 'B'){\r\n            //Add last card in part\r\n            new_deck->next = new_card(part->rank, part->suit);\r\n            new_deck->next->prev = new_deck;\r\n            new_deck = new_deck->next;\r\n\r\n            //Add the rest of the other cards in the first pile\r\n            new_deck->next = deck_next;\r\n            new_deck->next->prev = new_deck;\r\n\r\n            // Update pointers for head and tail\r\n            Card *placeholder = new_deck_head;\r\n            for (int i = 0; i < 52; ++i) {\r\n                placeholder = placeholder->next;\r\n            }\r\n            new_deck_head->prev = placeholder;\r\n            placeholder->next = new_deck_head;\r\n            return new_deck_head;\r\n        }\r\n\r\n\r\n        if(part->next != NULL && part->next->rank != 'B' ){\r\n            //Add card from second pile to new_deck\r\n            new_deck->next = new_card(part->rank, part->suit);\r\n            new_deck->next->prev = new_deck;\r\n            new_deck = new_deck->next;\r\n\r\n            // update second pile pointer\r\n            part = part->next;\r\n        }\r\n    }\r\n    new_deck->next = part;\r\n    new_deck->next->prev = new_deck;\r\n\r\n    // Update pointers for head and tail\r\n    Card *placeholder = new_deck_head;\r\n    for (int i = 0; i < 52; ++i) {\r\n        placeholder = placeholder->next;\r\n    }\r\n    new_deck_head->prev = placeholder;\r\n    placeholder->next = new_deck_head;\r\n\r\n    return new_deck_head;\r\n}\r\n\r\nCard *random_shuffle(Card *deck){\r\n    int n = 2;\r\n    if(!deck->next){\r\n        return deck;\r\n    }\r\n    srand(time(NULL)); // Seeds rand() once, generating better random numbers.\r\n\r\n    Card *shuffled_deck = deck->next; // Add first card from deck to shuffled_deck\r\n    Card *current_card = deck->next->next; // Add second card from deck to current card\r\n    Card *next_card = deck->next->next->next; // Add third card from deck to next_card\r\n    shuffled_deck->next = NULL;\r\n    shuffled_deck->prev = NULL;\r\n\r\n    while (current_card->rank != 'B'){\r\n        Card *next_next_card = next_card->next;\r\n        int random = rand() % n;\r\n        if (random == 0){\r\n            shuffled_deck->prev = current_card;\r\n            current_card->next = shuffled_deck;\r\n            current_card->prev = NULL;\r\n            shuffled_deck = current_card;\r\n        }\r\n        else {\r\n            Card *placeholder = shuffled_deck;\r\n            for (int i = 1; i < random; ++i) {\r\n                placeholder = placeholder->next;\r\n            }\r\n            if (placeholder->next != NULL) {\r\n                placeholder->next->prev = current_card;\r\n            }\r\n            current_card->next = placeholder->next;\r\n            placeholder->next = current_card;\r\n            current_card->prev = placeholder;\r\n\r\n        }\r\n        current_card = next_card;\r\n        next_card = next_next_card; // Update next_card\r\n        n++;\r\n    }\r\n    //Add dummy card in start of shuffled deck\r\n    shuffled_deck->prev = deck;\r\n    deck->next = shuffled_deck;\r\n    deck->prev = NULL;\r\n    shuffled_deck = deck;\r\n\r\n    // Update pointers for head and tail\r\n    Card *placeholder = shuffled_deck;\r\n    for (int i = 0; i < 52; ++i) {\r\n        placeholder = placeholder->next;\r\n    }\r\n    shuffled_deck->prev = placeholder;\r\n    placeholder->next = shuffled_deck;\r\n\r\n    return shuffled_deck;\r\n}\r\n\r\nvoid undo(){\r\n    if(strcmp(latest->command,\"UNDO\") == 0){\r\n        error_message();\r\n        return;\r\n    }//checks for dummy card\r\n\r\n\r\n    Card *topile = get_pile(latest->command[0],latest->command[1]);\r\n\r\n    int strlen = find_string_length(latest->command);\r\n\r\n    if(strlen == 9) {\r\n        Card *frompile = get_pile(latest->command[7], latest->command[8]);\r\n        Card *fromcard = find_card(latest->command[3],latest->command[4],frompile);\r\n        Card *tocard = topile;\r\n        while(tocard->next != topile) {\r\n            tocard = tocard->next;\r\n        }\r\n        move_bunch(fromcard,frompile,tocard,topile);\r\n    }\r\n    else{\r\n        Card *frompile = get_pile(latest->command[4],latest->command[5]);\r\n        Card *from = frompile;\r\n        Card *to = topile;\r\n        while(from->next != frompile){\r\n            from = from->next;\r\n        }\r\n        while(to->next != topile){\r\n            to = to->next;\r\n        }\r\n        move_card(from,to);\r\n    }\r\n    //making the pointer point to the latest move command.\r\n    Moves *temp = latest;\r\n    latest = temp->prev;\r\n}\r\n\r\n//the foundations will not have a predefined suit. The suit of the foundation will be defined by the first card moved to it.\r\nbool move_to_foundation(Card *card,Card *topilepos, Card *toPile) {\r\n    bool possMove = false;\r\n    if(card->next->rank != 'C')//checks if we're trying to move more than one card.\r\n        return possMove;\r\n\r\n    if (toPile->next == toPile){//Checks if the foundation is empty.\r\n        if(card->rank == ranks[0])//if the foundation is empty check if the card is an Ace.\r\n            possMove = true;\r\n    }else{\r\n        int i = 0;\r\n        while(ranks[i] != card->rank){ //Find the index for the cards rank.\r\n            i++;\r\n        }\r\n\r\n        if(ranks[i-1] == topilepos->rank){//checks if the topcard is one rank less, than the card we with to move.\r\n            if(card->suit == topilepos->suit)//checks for same suit.\r\n                possMove = true;\r\n        }\r\n    }\r\n    return possMove;\r\n}\r\n\r\nbool valid_move(Card *cardToMove, Card *topilepos, Card *topile){\r\n    bool valid = false;\r\n    int i = 0;\r\n\r\n    if(topile->rank == foundations[0]->rank){\r\n        return move_to_foundation(cardToMove,topilepos,topile);\r\n    }\r\n\r\n    while(ranks[i] != cardToMove->rank){\r\n        i++;\r\n    }\r\n    if(i < 12 && ranks[i+1] == topilepos->rank){\r\n        if(cardToMove->suit != topilepos->suit)\r\n            valid = true;\r\n    }\r\n    if(i == 12){\r\n        //checks if pile is empty for king move\r\n        if(topile->next == topile)\r\n            valid = true;\r\n    }\r\n    return valid;\r\n}\r\n\r\nvoid move_specific(char *command,Card *cardtomove) {\r\n    Card *frompile = cardtomove;\r\n    //checks if card exists in pile / list\r\n    cardtomove = find_card(command[3], command[4], cardtomove);\r\n    if(cardtomove == NULL){\r\n        error_message();\r\n        return;\r\n    }\r\n\r\n    //finds the column or foundation specified in the command.\r\n    Card *to = get_pile(command[7],command[8]);\r\n    if(to == NULL){\r\n        error_message();\r\n        return;\r\n    }\r\n\r\n    Card *tonode = to;\r\n    while(tonode->next != to){\r\n        tonode = tonode->next;\r\n    }\r\n    //cardtomove this point we have found the card cardtomove a pile, and the pile it's supposed to go to.\r\n    //now we check if the move is valid.\r\n    if(valid_move(cardtomove, tonode, to)){\r\n        move_bunch(cardtomove,frompile,tonode,to);\r\n        update_undo_header(command);\r\n    }\r\n    else\r\n        error_message();\r\n}\r\n\r\n\r\nvoid pile_to_pile(char *command,Card *pointer) {\r\n    Card *from = pointer;\r\n    Card *to = get_pile(command[4],command[5]);\r\n    Card *pile = to;\r\n    if (to == NULL){\r\n        error_message();\r\n        return;\r\n    }\r\n\r\n    while(from->next != pointer){\r\n        from = from->next;\r\n    }\r\n    while(to->next != pile){\r\n        to = to->next;\r\n    }\r\n\r\n    Card *temp;\r\n    if(valid_move(from,to,pile)){\r\n        move_card(from,to);\r\n        update_undo_header(command);\r\n    }\r\n    else\r\n        error_message();\r\n}\r\n\r\nvoid move(char *command) {\r\n    Card *pile = get_pile(command[0], command[1]);//gets pointer of list to move from\r\n    if (pile == NULL) {\r\n        error_message();//if the get_pile method returns a null pointer we return to caller with error message\r\n        return;\r\n    }\r\n    if(pile->next == pile){//checks if pile is empty\r\n        error_message();\r\n        return;\r\n    }\r\n\r\n    int strlen = find_string_length(command);\r\n\r\n    switch (strlen) {\r\n        case 6 :\r\n            pile_to_pile(command, pile);\r\n            break;\r\n        case 9:\r\n            move_specific(command, pile);\r\n            break;\r\n        default:\r\n            error_message();\r\n            return;\r\n    }\r\n}\r\n\r\n//Showmethod only works on unshuffled deck\r\nvoid show(Card *deck){\r\n    Card *temp = deck;\r\n    printf(\"\\n\\tC1\\tC2\\tC3\\tC4\\tC5\\tC6\\tC7\\n\");\r\n    int i = 0;\r\n    int j = 1;\r\n    int f;\r\n    char s[2];\r\n    while(temp->next->rank != 'B'){\r\n        if(i % 7 == 0) {\r\n            if(j % 2 == 0 && j != 1) {\r\n                f = j / 2;\r\n                s[0] = 'F';\r\n                s[1] = f + '0';\r\n                printf(\"\\t[]\\t%c%c\",s[0],s[1]);\r\n            }\r\n            printf(\"\\n\\t\");\r\n            j++;\r\n        }\r\n        temp = temp->next;\r\n        printf(\"%c%c\\t\",temp->rank, temp->suit);\r\n\r\n        i++;\r\n    }\r\n    printf(\"\\n\\n\");\r\n}\r\n\r\nint find_longest_list(){\r\n    int max_length = 0;\r\n    //temp pointer to iterate through lists\r\n    Card *temp;\r\n    //finding the longest linked list.\r\n    for (int i = 0; i < sizeof(columns) / sizeof(columns[0]); ++i) {\r\n        int j = 0;\r\n        temp = columns[i];\r\n        while(temp->next != columns[i]){\r\n            temp = temp->next;\r\n            j++;\r\n        }\r\n        if(j > max_length)\r\n            max_length = j;\r\n    }\r\n    return max_length;\r\n}\r\n\r\n//method for printing the contents of each list\r\nvoid print_gamestate(){\r\n    Card *placeholder[7];\r\n\r\n    //copying head pointers to foundations linked lists over to another array.\r\n    for (int i = 0; i < sizeof(placeholder) / sizeof(placeholder[0]); ++i) {\r\n        placeholder[i] = columns[i];\r\n    }\r\n\r\n    int max_length = find_longest_list(); //finding the length of the longest list, to know how much to print to the console\r\n    if(max_length < 8) //if the length is less than 8, it is set to 8, so the foundations will be printed.\r\n        max_length = 8;\r\n\r\n    printf(\"\\n\");\r\n    for (int i = 0; i < sizeof(placeholder) / sizeof(placeholder[0]); ++i) {//Prints the dummy cards for all columns\r\n        printf(\"\\t%c%c\",placeholder[i]->rank,placeholder[i]->suit);\r\n    }\r\n    printf(\"\\n\");\r\n    int f = 1;\r\n    Card* foundation_temp;\r\n    //printing one card at a time from each column. If there is no card, an empty space will be printed.\r\n    for (int i = 0; i < max_length; ++i) {\r\n        printf(\"\\n\\t\");\r\n        for (int j = 0; j < sizeof(placeholder) / sizeof(placeholder[0]); ++j) {\r\n            //Checks that next card is not the last card\r\n            if (placeholder[j]->next != columns[j]) {\r\n                placeholder[j] = placeholder[j]->next;\r\n                //checks that the facedown cards has been turned or not\r\n                if(facedown[j] >= i + 1){\r\n                    //checks whether a card is supposed to be turned\r\n                    if(facedown[j] == i + 1 && placeholder[j]->next == columns[j]) {\r\n                        //Decrements the amount of facedown cards for the given column.\r\n                        update_facedown(j);\r\n                        printf(\"%c%c\\t\", placeholder[j]->rank, placeholder[j]->suit);\r\n                    }\r\n                    else\r\n                        //prints facedown card\r\n                        printf(\"[]\\t\");\r\n                }\r\n                else\r\n                    //if we are past the facedown cards just print the card if there is a nextcard\r\n                    printf(\"%c%c\\t\", placeholder[j]->rank, placeholder[j]->suit);\r\n            }\r\n            else\r\n                printf(\"  \\t\");\r\n        }\r\n        //printing foundation cards for evert second row.\r\n        f++;\r\n        if (f % 2 == 0 && ((f/2) - 1) < (sizeof(foundations) / sizeof(foundations[0]))){\r\n            foundation_temp = foundations[(f / 2) - 1];\r\n            while (foundation_temp->next != foundations[(f / 2) - 1]) {\r\n                foundation_temp = foundation_temp->next;\r\n            }\r\n            if(foundations[(f / 2) - 1]->next == foundations[(f / 2) - 1]){\r\n                printf(\"[]\\tF%c\",(f / 2) + '0');\r\n            }else{\r\n                printf(\"%c%c\\t%c%c\",foundation_temp->rank,foundation_temp->suit,foundations[(f / 2) - 1]->rank,foundations[(f / 2) - 1]->suit);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//Distributes the cards on to the starting piles.\r\nvoid distribute_cards(Card* play_deck){\r\n    bool distributed = false;\r\n    Card *temp;\r\n    Card *column_temp;\r\n\r\n    if(!distributed){\r\n        int pile_lengths[7] = {1,6,7,8,9,10,11}; //array determines how many cards should be placed in a column\r\n        for (int i = 0; play_deck->next->rank != 'B'; ++i) {\r\n            for (int j = 0; j < sizeof(pile_lengths) / sizeof(pile_lengths[0]); ++j) {\r\n                //if the right amount of cards have already been placed in a column, the following will iterate to the next column\r\n                if(pile_lengths[j] > i && play_deck->next->rank != 'B') {\r\n                    play_deck = play_deck->next;\r\n                    temp = play_deck;\r\n                    column_temp = columns[j];\r\n                    while(column_temp->next->rank != 'C'){\r\n                        column_temp = column_temp->next;\r\n                    }\r\n                    //erasing node from play_deck\r\n                    play_deck = temp->prev;\r\n                    temp->prev->next = temp->next;\r\n                    temp->next->prev = temp->prev;\r\n\r\n                    column_temp->next = temp;\r\n                    temp->prev = column_temp;\r\n                    temp->next = columns[j];\r\n                }\r\n            }\r\n        }\r\n        distributed = true;\r\n    }\r\n\r\n}\r\n\r\nvoid setup_columns_foundations(){\r\n    for (int i = 0; i < 4; ++i) {\r\n        foundations[i] = new_card('F', i + 1 +'0'); //dummy card\r\n        foundations[i]->prev = foundations[i];\r\n        foundations[i]->next = foundations[i];\r\n    }\r\n    for (int i = 0; i < 7; ++i) {\r\n        columns[i] = new_card('C', i + 1 + '0'); //dummy card\r\n        columns[i]->prev = columns[i];\r\n        columns[i]->next = columns[i];\r\n        facedown[i] = i;\r\n    }\r\n}\r\n\r\nvoid startup_phase() {\r\n    char input[10];\r\n    char *lastcommand = input;\r\n    char filename[155];\r\n    Card *initial_deck = NULL;\r\n    Card *shuffled_deck = NULL;\r\n    while (!play) {\r\n        printf(\"\\n\");\r\n        printf(\"\\nLast command: %s\\nMessage: %s\\n\", lastcommand,command_approver);\r\n        command_approver = \"OK\";\r\n        printf(\"Enter command: \");\r\n        scanf(\"%s\", &input);\r\n\r\n//\"C:\\\\Users\\\\emil1\\\\OneDrive\\\\Documents\\\\GitHub\\\\Yukon-G50\\\\Test_input.txt\"\r\n        if(strcmp(input, \"ld\") == 0){\r\n            printf(\"Enter filename of file to be loaded,\\n\"\r\n                   \" or enter 'default' to use default deck of cards: \");\r\n            scanf(\"%s\", &filename);\r\n\r\n            if (strcmp(filename,\"default\") == 0) {\r\n                char *strarr = \"C:\\\\Users\\\\emil1\\\\OneDrive\\\\Documents\\\\GitHub\\\\Yukon-G50\\\\Test_input.txt\";\r\n                initial_deck = load_deck(strarr);\r\n            }else {\r\n                initial_deck = load_deck(filename);\r\n            }\r\n        }else if(strcmp(input, \"sw\") == 0){\r\n            if (initial_deck == NULL){\r\n                error_message();\r\n            }\r\n            else{\r\n                show(initial_deck);\r\n            }\r\n\r\n        }else if(strcmp(input, \"sl\") == 0){\r\n            int amount = NULL;\r\n            printf(\"Enter amount of cards to split, if no amount is entered it is chosen at random: \");\r\n            scanf(\"%d\", &amount);\r\n\r\n            if (amount == '\\n') {\r\n                amount = rand() % 52;\r\n                shuffled_deck = interleave_shuffle(initial_deck, amount);\r\n            }else{\r\n                shuffled_deck = interleave_shuffle(initial_deck, amount);\r\n            }\r\n\r\n        }else if(strcmp(input, \"sr\") == 0){\r\n            shuffled_deck = random_shuffle(initial_deck);\r\n\r\n        }else if(strcmp(input, \"sd\") == 0){\r\n            char *save_filename;\r\n            printf(\"Enter filename of file to be saved,\\n\"\r\n                   \" or enter 'default' to use default filename cards.txt: \");\r\n            scanf(\"%s\", &save_filename);\r\n\r\n            if (strcmp(save_filename,\"default\") == 0) {\r\n                char *savefiletemp = \"C:\\\\Users\\\\emil1\\\\OneDrive\\\\Documents\\\\GitHub\\\\Yukon-G50\\\\cards.txt\";\r\n                save_cards(shuffled_deck, savefiletemp);\r\n            }else{\r\n                save_cards(shuffled_deck, save_filename);\r\n            }\r\n\r\n        }else if(strcmp(input, \"qq\") == 0){\r\n            exit(0);\r\n\r\n        }else if(input[0] == 'p'){\r\n            setup_columns_foundations();\r\n            distribute_cards(shuffled_deck);\r\n            initialize_undo();\r\n            play = true;\r\n\r\n        }else\r\n            error_message();\r\n\r\n        lastcommand = input;\r\n    }\r\n}\r\n\r\nbool game_won(){\r\n    bool gamewon = true;\r\n\r\n    for (int i = 0; i < sizeof(foundations) / sizeof(foundations[0]); ++i) {\r\n        if(foundations[i]->prev->rank != ranks[12])\r\n            gamewon = false;\r\n    }\r\n    return gamewon;\r\n}\r\nvoid redo() {\r\n    move(redo_command);\r\n}\r\n\r\nvoid update_redo() {\r\n    for (int i = 0; i < sizeof(latest->command) / sizeof(latest->command[0]); ++i) {\r\n        redo_command[i] = latest->command[i];\r\n    }\r\n}\r\n\r\nvoid play_phase(){\r\n    char input[10];\r\n    char *lastcommand = input;\r\n    while(play){\r\n        printf(\"\\n\");\r\n        print_gamestate();\r\n        printf(\"\\nLast command: %s\\nMessage: %s\\n\", lastcommand,command_approver);\r\n        command_approver = \"OK\";\r\n        printf(\"Enter command: \");\r\n        scanf(\"%s\", &input);\r\n\r\n        if(input[0] == 'u' || input[0] == 'U') {\r\n            update_redo();\r\n            undo();\r\n        }\r\n        else if(input[0] == 'q' || input[0] == 'Q')\r\n            play = false;\r\n        else if(input[0] == 'r' || input[0] == 'R')\r\n            redo();\r\n        else{\r\n            move(input);\r\n        }\r\n\r\n        lastcommand = input;\r\n    }\r\n}\r\n\r\nint main() {\r\n    bool won = false;\r\n    while(!won) {\r\n        startup_phase();\r\n        play_phase();\r\n        if(game_won()){\r\n            won = true;\r\n            printf(\"Congrats, you've won the game!\");\r\n        }\r\n    }\r\n    return 0;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.c b/main.c
--- a/main.c	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ b/main.c	(date 1652186542522)
@@ -394,7 +394,6 @@
         return;
     }//checks for dummy card
 
-
     Card *topile = get_pile(latest->command[0],latest->command[1]);
 
     int strlen = find_string_length(latest->command);
@@ -423,6 +422,7 @@
     //making the pointer point to the latest move command.
     Moves *temp = latest;
     latest = temp->prev;
+    free(temp);
 }
 
 //the foundations will not have a predefined suit. The suit of the foundation will be defined by the first card moved to it.
Index: cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-f81a2278f8aba232ba59.json
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-f81a2278f8aba232ba59.json b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-f81a2278f8aba232ba59.json
deleted file mode 100644
--- a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-f81a2278f8aba232ba59.json	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ /dev/null	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
@@ -1,430 +0,0 @@
-{
-	"inputs" : 
-	[
-		{
-			"path" : "CMakeLists.txt"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineSystem.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystem.cmake.in"
-		},
-		{
-			"isGenerated" : true,
-			"path" : "cmake-build-debug/CMakeFiles/3.22.3/CMakeSystem.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerId.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCompilerIdDetection.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ADSP-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Borland-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Cray-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GHS-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/HP-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IAR-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Intel-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/MSVC-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PGI-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PathScale-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SCO-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TI-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Watcom-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XL-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeFindBinUtils.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-FindBinUtils.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompiler.cmake.in"
-		},
-		{
-			"isGenerated" : true,
-			"path" : "cmake-build-debug/CMakeFiles/3.22.3/CMakeCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineRCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCCompiler.cmake.in"
-		},
-		{
-			"isGenerated" : true,
-			"path" : "cmake-build-debug/CMakeFiles/3.22.3/CMakeRCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestRCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCompilerCommon.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerABI.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitIncludeInfo.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitLinkInfo.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseLibraryArchitecture.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCompilerCommon.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompilerABI.c"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompileFeatures.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Internal/FeatureTesting.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompiler.cmake.in"
-		},
-		{
-			"isGenerated" : true,
-			"path" : "cmake-build-debug/CMakeFiles/3.22.3/CMakeCCompiler.cmake"
-		},
-		{
-			"isCMake" : true,
-			"isExternal" : true,
-			"path" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake"
-		}
-	],
-	"kind" : "cmakeFiles",
-	"paths" : 
-	{
-		"build" : "C:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50/cmake-build-debug",
-		"source" : "C:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50"
-	},
-	"version" : 
-	{
-		"major" : 1,
-		"minor" : 0
-	}
-}
Index: cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T21-57-45-0451.json
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T21-57-45-0451.json b/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T21-57-45-0451.json
deleted file mode 100644
--- a/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T21-57-45-0451.json	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ /dev/null	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
@@ -1,108 +0,0 @@
-{
-	"cmake" : 
-	{
-		"generator" : 
-		{
-			"multiConfig" : false,
-			"name" : "Ninja"
-		},
-		"paths" : 
-		{
-			"cmake" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/bin/cmake.exe",
-			"cpack" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/bin/cpack.exe",
-			"ctest" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/bin/ctest.exe",
-			"root" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22"
-		},
-		"version" : 
-		{
-			"isDirty" : false,
-			"major" : 3,
-			"minor" : 22,
-			"patch" : 3,
-			"string" : "3.22.3",
-			"suffix" : ""
-		}
-	},
-	"objects" : 
-	[
-		{
-			"jsonFile" : "codemodel-v2-0301993ad85d78514b6e.json",
-			"kind" : "codemodel",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 3
-			}
-		},
-		{
-			"jsonFile" : "cache-v2-db874d3af00045bb6d39.json",
-			"kind" : "cache",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 0
-			}
-		},
-		{
-			"jsonFile" : "cmakeFiles-v1-f81a2278f8aba232ba59.json",
-			"kind" : "cmakeFiles",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		},
-		{
-			"jsonFile" : "toolchains-v1-222b18f823a13c89edf9.json",
-			"kind" : "toolchains",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		}
-	],
-	"reply" : 
-	{
-		"cache-v2" : 
-		{
-			"jsonFile" : "cache-v2-db874d3af00045bb6d39.json",
-			"kind" : "cache",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 0
-			}
-		},
-		"cmakeFiles-v1" : 
-		{
-			"jsonFile" : "cmakeFiles-v1-f81a2278f8aba232ba59.json",
-			"kind" : "cmakeFiles",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		},
-		"codemodel-v2" : 
-		{
-			"jsonFile" : "codemodel-v2-0301993ad85d78514b6e.json",
-			"kind" : "codemodel",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 3
-			}
-		},
-		"toolchains-v1" : 
-		{
-			"jsonFile" : "toolchains-v1-222b18f823a13c89edf9.json",
-			"kind" : "toolchains",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		}
-	}
-}
Index: cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T23-26-21-0306.json
===================================================================
diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T23-26-21-0306.json b/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T23-26-21-0306.json
deleted file mode 100644
--- a/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T23-26-21-0306.json	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ /dev/null	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
@@ -1,108 +0,0 @@
-{
-	"cmake" : 
-	{
-		"generator" : 
-		{
-			"multiConfig" : false,
-			"name" : "Ninja"
-		},
-		"paths" : 
-		{
-			"cmake" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/bin/cmake.exe",
-			"cpack" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/bin/cpack.exe",
-			"ctest" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/bin/ctest.exe",
-			"root" : "C:/Program Files/JetBrains/CLion 2022.1/bin/cmake/win/share/cmake-3.22"
-		},
-		"version" : 
-		{
-			"isDirty" : false,
-			"major" : 3,
-			"minor" : 22,
-			"patch" : 3,
-			"string" : "3.22.3",
-			"suffix" : ""
-		}
-	},
-	"objects" : 
-	[
-		{
-			"jsonFile" : "codemodel-v2-0301993ad85d78514b6e.json",
-			"kind" : "codemodel",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 3
-			}
-		},
-		{
-			"jsonFile" : "cache-v2-db874d3af00045bb6d39.json",
-			"kind" : "cache",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 0
-			}
-		},
-		{
-			"jsonFile" : "cmakeFiles-v1-f81a2278f8aba232ba59.json",
-			"kind" : "cmakeFiles",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		},
-		{
-			"jsonFile" : "toolchains-v1-222b18f823a13c89edf9.json",
-			"kind" : "toolchains",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		}
-	],
-	"reply" : 
-	{
-		"cache-v2" : 
-		{
-			"jsonFile" : "cache-v2-db874d3af00045bb6d39.json",
-			"kind" : "cache",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 0
-			}
-		},
-		"cmakeFiles-v1" : 
-		{
-			"jsonFile" : "cmakeFiles-v1-f81a2278f8aba232ba59.json",
-			"kind" : "cmakeFiles",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		},
-		"codemodel-v2" : 
-		{
-			"jsonFile" : "codemodel-v2-0301993ad85d78514b6e.json",
-			"kind" : "codemodel",
-			"version" : 
-			{
-				"major" : 2,
-				"minor" : 3
-			}
-		},
-		"toolchains-v1" : 
-		{
-			"jsonFile" : "toolchains-v1-222b18f823a13c89edf9.json",
-			"kind" : "toolchains",
-			"version" : 
-			{
-				"major" : 1,
-				"minor" : 0
-			}
-		}
-	}
-}
Index: cmake-build-debug/Testing/Temporary/LastTest.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Start testing: May 10 03:08 Rom, sommertid\r\n----------------------------------------------------------\r\nEnd testing: May 10 03:08 Rom, sommertid\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
--- a/cmake-build-debug/Testing/Temporary/LastTest.log	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ b/cmake-build-debug/Testing/Temporary/LastTest.log	(date 1652178097022)
@@ -1,3 +1,3 @@
-Start testing: May 10 03:08 Rom, sommertid
+Start testing: May 10 12:21 Rom, sommertid
 ----------------------------------------------------------
-End testing: May 10 03:08 Rom, sommertid
+End testing: May 10 12:21 Rom, sommertid
Index: cmake-build-debug/.ninja_log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ninja log v5\r\n3\t712\t6738363081089158\tCMakeFiles/Yukon_G50.dir/main.c.obj\tc417855f6526839a\r\n713\t2982\t6738363105186313\tYukon_G50.exe\td2b83a946ec9e300\r\n0\t173\t6738365962071465\tCMakeFiles/Yukon_G50.dir/main.c.obj\t509d418b14e1cf79\r\n174\t280\t6738365963076760\tYukon_G50.exe\tf2f10bddd0d0ced3\r\n2\t161\t6738368475943525\tCMakeFiles/Yukon_G50.dir/main.c.obj\t509d418b14e1cf79\r\n161\t261\t6738368476887745\tYukon_G50.exe\tf2f10bddd0d0ced3\r\n2\t195\t6738369348403144\tCMakeFiles/Yukon_G50.dir/main.c.obj\t509d418b14e1cf79\r\n195\t293\t6738369349284389\tYukon_G50.exe\tf2f10bddd0d0ced3\r\n2\t175\t6738371500056917\tCMakeFiles/Yukon_G50.dir/main.c.obj\t509d418b14e1cf79\r\n186\t268\t6738371500930939\tYukon_G50.exe\tf2f10bddd0d0ced3\r\n2\t172\t6738372137942815\tCMakeFiles/Yukon_G50.dir/main.c.obj\t509d418b14e1cf79\r\n172\t249\t6738372138666417\tYukon_G50.exe\tf2f10bddd0d0ced3\r\n2\t177\t6738373432885798\tCMakeFiles/Yukon_G50.dir/main.c.obj\t509d418b14e1cf79\r\n177\t262\t6738373433684266\tYukon_G50.exe\tf2f10bddd0d0ced3\r\n0\t376\t6738464673773758\tCMakeFiles/Yukon_G50.dir/main.c.obj\tc417855f6526839a\r\n377\t757\t6738464677334387\tYukon_G50.exe\td2b83a946ec9e300\r\n8\t359\t6738479019242664\tCMakeFiles/Yukon_G50.dir/main.c.obj\tc417855f6526839a\r\n359\t665\t6738479022284524\tYukon_G50.exe\td2b83a946ec9e300\r\n2\t162\t6738481242814109\tCMakeFiles/Yukon_G50.dir/main.c.obj\tc417855f6526839a\r\n163\t346\t6738481244634334\tYukon_G50.exe\td2b83a946ec9e300\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/.ninja_log b/cmake-build-debug/.ninja_log
--- a/cmake-build-debug/.ninja_log	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ b/cmake-build-debug/.ninja_log	(date 1652176891303)
@@ -1,21 +1,3 @@
 # ninja log v5
-3	712	6738363081089158	CMakeFiles/Yukon_G50.dir/main.c.obj	c417855f6526839a
-713	2982	6738363105186313	Yukon_G50.exe	d2b83a946ec9e300
-0	173	6738365962071465	CMakeFiles/Yukon_G50.dir/main.c.obj	509d418b14e1cf79
-174	280	6738365963076760	Yukon_G50.exe	f2f10bddd0d0ced3
-2	161	6738368475943525	CMakeFiles/Yukon_G50.dir/main.c.obj	509d418b14e1cf79
-161	261	6738368476887745	Yukon_G50.exe	f2f10bddd0d0ced3
-2	195	6738369348403144	CMakeFiles/Yukon_G50.dir/main.c.obj	509d418b14e1cf79
-195	293	6738369349284389	Yukon_G50.exe	f2f10bddd0d0ced3
-2	175	6738371500056917	CMakeFiles/Yukon_G50.dir/main.c.obj	509d418b14e1cf79
-186	268	6738371500930939	Yukon_G50.exe	f2f10bddd0d0ced3
-2	172	6738372137942815	CMakeFiles/Yukon_G50.dir/main.c.obj	509d418b14e1cf79
-172	249	6738372138666417	Yukon_G50.exe	f2f10bddd0d0ced3
-2	177	6738373432885798	CMakeFiles/Yukon_G50.dir/main.c.obj	509d418b14e1cf79
-177	262	6738373433684266	Yukon_G50.exe	f2f10bddd0d0ced3
-0	376	6738464673773758	CMakeFiles/Yukon_G50.dir/main.c.obj	c417855f6526839a
-377	757	6738464677334387	Yukon_G50.exe	d2b83a946ec9e300
-8	359	6738479019242664	CMakeFiles/Yukon_G50.dir/main.c.obj	c417855f6526839a
-359	665	6738479022284524	Yukon_G50.exe	d2b83a946ec9e300
 2	162	6738481242814109	CMakeFiles/Yukon_G50.dir/main.c.obj	c417855f6526839a
 163	346	6738481244634334	Yukon_G50.exe	d2b83a946ec9e300
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated>\r\n      <config projectName=\"Yukon_G50\" targetName=\"Yukon_G50\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"63b0d282-5cb0-4c80-a4ec-0961bdf29197\" name=\"Changes\" comment=\"finished\">\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/.ninja_deps\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/.ninja_deps\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/.ninja_log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/.ninja_log\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2021\" />\r\n    <option name=\"minorVersion\" value=\"3.4\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"28mLQm1QvPbHb664MwL8dgXKwjh\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"cmake.loaded.for.project\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\">\r\n      <method v=\"2\">\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Yukon_G50\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Yukon_G50\" TARGET_NAME=\"Yukon_G50\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"Yukon_G50\" RUN_TARGET_NAME=\"Yukon_G50\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"63b0d282-5cb0-4c80-a4ec-0961bdf29197\" name=\"Changes\" comment=\"\" />\r\n      <created>1651816801136</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1651816801136</updated>\r\n      <workItem from=\"1651816802845\" duration=\"4653000\" />\r\n      <workItem from=\"1651824995381\" duration=\"233000\" />\r\n      <workItem from=\"1651825476070\" duration=\"297000\" />\r\n      <workItem from=\"1651825921121\" duration=\"4994000\" />\r\n      <workItem from=\"1651842195150\" duration=\"3959000\" />\r\n      <workItem from=\"1651994419726\" duration=\"1197000\" />\r\n      <workItem from=\"1652011086391\" duration=\"7314000\" />\r\n      <workItem from=\"1652091448129\" duration=\"7902000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Project created\">\r\n      <created>1651820463956</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651820463956</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Project created\">\r\n      <created>1651820818537</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651820818537</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"updated version of project\">\r\n      <created>1651824571272</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651824571272</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Added Test_input file\">\r\n      <created>1651824952769</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651824952769</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"interleave_shuffle done\">\r\n      <created>1651933280586</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651933280586</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"random_shuffle() done\">\r\n      <created>1651941011566</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651941011566</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added functionality that updates head and tail pointers in shuffle methods\">\r\n      <created>1651995531433</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1651995531433</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added method to distribute the cards to the starting piles\">\r\n      <created>1652052743695</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652052743695</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added method to distribute the cards to the starting piles\">\r\n      <created>1652053078954</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652053078954</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Added method to distribute the cards to the starting piles\">\r\n      <created>1652057665038</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652057665038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"gamelogic fixed\">\r\n      <created>1652059889848</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652059889848</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"bugfix\">\r\n      <created>1652133430324</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1652133430324</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Project created\" />\r\n    <MESSAGE value=\"updated version of project\" />\r\n    <MESSAGE value=\"Added Test_input file\" />\r\n    <MESSAGE value=\"interleave_shuffle done\" />\r\n    <MESSAGE value=\"random_shuffle() done\" />\r\n    <MESSAGE value=\"Added functionality that updates head and tail pointers in shuffle methods\" />\r\n    <MESSAGE value=\"Added method to distribute the cards to the starting piles\" />\r\n    <MESSAGE value=\"gamelogic fixed\" />\r\n    <MESSAGE value=\"bugfix\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"bugfix\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"com.jetbrains.cidr.execution.debugger.OCBreakpointType\">\r\n          <url>file://$PROJECT_DIR$/main.c</url>\r\n          <line>822</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ b/.idea/workspace.xml	(date 1652186349500)
@@ -14,9 +14,17 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="63b0d282-5cb0-4c80-a4ec-0961bdf29197" name="Changes" comment="finished">
+    <list default="true" id="63b0d282-5cb0-4c80-a4ec-0961bdf29197" name="Changes" comment="Added redo function">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-f81a2278f8aba232ba59.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T21-57-45-0451.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/.cmake/api/v1/reply/index-2022-05-09T23-26-21-0306.json" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/.ninja_deps" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/.ninja_deps" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/cmake-build-debug/.ninja_log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/.ninja_log" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/main.c" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -49,16 +57,25 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">
-    <property name="cmake.loaded.for.project" value="true" />
-  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "cmake.loaded.for.project": "true",
+    "node.js.detected.package.eslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)"
+  }
+}]]></component>
   <component name="RunManager">
-    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
+    <configuration name="Yukon_G50" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Yukon_G50" TARGET_NAME="Yukon_G50" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Yukon_G50" RUN_TARGET_NAME="Yukon_G50">
       <method v="2">
-        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Yukon_G50" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Yukon_G50" TARGET_NAME="Yukon_G50" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Yukon_G50" RUN_TARGET_NAME="Yukon_G50">
+    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
       <method v="2">
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
@@ -80,6 +97,7 @@
       <workItem from="1651994419726" duration="1197000" />
       <workItem from="1652011086391" duration="7314000" />
       <workItem from="1652091448129" duration="7902000" />
+      <workItem from="1652176861051" duration="4891000" />
     </task>
     <task id="LOCAL-00001" summary="Project created">
       <created>1651820463956</created>
@@ -165,7 +183,14 @@
       <option name="project" value="LOCAL" />
       <updated>1652133430324</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="Added redo function">
+      <created>1652144889434</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1652144889434</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -192,17 +217,7 @@
     <MESSAGE value="Added method to distribute the cards to the starting piles" />
     <MESSAGE value="gamelogic fixed" />
     <MESSAGE value="bugfix" />
-    <option name="LAST_COMMIT_MESSAGE" value="bugfix" />
-  </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
-          <url>file://$PROJECT_DIR$/main.c</url>
-          <line>822</line>
-          <option name="timeStamp" value="2" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
+    <MESSAGE value="Added redo function" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added redo function" />
   </component>
 </project>
\ No newline at end of file
Index: cmake-build-debug/CMakeFiles/clion-log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"C:\\Program Files\\JetBrains\\CLion 2022.1\\bin\\cmake\\win\\bin\\cmake.exe\" -DCMAKE_BUILD_TYPE=Debug \"-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2022.1/bin/ninja/win/ninja.exe\" -G Ninja -S C:\\Users\\emil1\\OneDrive\\Documents\\GitHub\\Yukon-G50 -B C:\\Users\\emil1\\OneDrive\\Documents\\GitHub\\Yukon-G50\\cmake-build-debug\r\n-- The C compiler identification is GNU 11.2.0\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: C:/Program Files/JetBrains/CLion 2022.1/bin/mingw/bin/gcc.exe - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: C:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50/cmake-build-debug\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/CMakeFiles/clion-log.txt b/cmake-build-debug/CMakeFiles/clion-log.txt
--- a/cmake-build-debug/CMakeFiles/clion-log.txt	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ b/cmake-build-debug/CMakeFiles/clion-log.txt	(date 1652176894829)
@@ -1,10 +1,4 @@
 "C:\Program Files\JetBrains\CLion 2022.1\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug "-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2022.1/bin/ninja/win/ninja.exe" -G Ninja -S C:\Users\emil1\OneDrive\Documents\GitHub\Yukon-G50 -B C:\Users\emil1\OneDrive\Documents\GitHub\Yukon-G50\cmake-build-debug
--- The C compiler identification is GNU 11.2.0
--- Detecting C compiler ABI info
--- Detecting C compiler ABI info - done
--- Check for working C compiler: C:/Program Files/JetBrains/CLion 2022.1/bin/mingw/bin/gcc.exe - skipped
--- Detecting C compile features
--- Detecting C compile features - done
 -- Configuring done
 -- Generating done
 -- Build files have been written to: C:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50/cmake-build-debug
Index: cmake-build-debug/build.ninja
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># CMAKE generated file: DO NOT EDIT!\r\n# Generated by \"Ninja\" Generator, CMake Version 3.22\r\n\r\n# This file contains all the build statements describing the\r\n# compilation DAG.\r\n\r\n# =============================================================================\r\n# Write statements declared in CMakeLists.txt:\r\n# \r\n# Which is the root file.\r\n# =============================================================================\r\n\r\n# =============================================================================\r\n# Project: Yukon_G50\r\n# Configurations: Debug\r\n# =============================================================================\r\n\r\n#############################################\r\n# Minimal version of Ninja required by this file\r\n\r\nninja_required_version = 1.5\r\n\r\n\r\n#############################################\r\n# Set configuration variable for custom commands.\r\n\r\nCONFIGURATION = Debug\r\n# =============================================================================\r\n# Include auxiliary files.\r\n\r\n\r\n#############################################\r\n# Include rules file.\r\n\r\ninclude CMakeFiles/rules.ninja\r\n\r\n# =============================================================================\r\n\r\n#############################################\r\n# Logical path to working directory; prefix for absolute paths.\r\n\r\ncmake_ninja_workdir = C$:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50/cmake-build-debug/\r\n# =============================================================================\r\n# Object build statements for EXECUTABLE target Yukon_G50\r\n\r\n\r\n#############################################\r\n# Order-only phony target for Yukon_G50\r\n\r\nbuild cmake_object_order_depends_target_Yukon_G50: phony || CMakeFiles/Yukon_G50.dir\r\n\r\nbuild CMakeFiles/Yukon_G50.dir/main.c.obj: C_COMPILER__Yukon_G50_Debug C$:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50/main.c || cmake_object_order_depends_target_Yukon_G50\r\n  DEP_FILE = CMakeFiles\\Yukon_G50.dir\\main.c.obj.d\r\n  FLAGS = -g -std=gnu99\r\n  OBJECT_DIR = CMakeFiles\\Yukon_G50.dir\r\n  OBJECT_FILE_DIR = CMakeFiles\\Yukon_G50.dir\r\n  TARGET_COMPILE_PDB = CMakeFiles\\Yukon_G50.dir\\\r\n  TARGET_PDB = Yukon_G50.pdb\r\n\r\n\r\n# =============================================================================\r\n# Link build statements for EXECUTABLE target Yukon_G50\r\n\r\n\r\n#############################################\r\n# Link the executable Yukon_G50.exe\r\n\r\nbuild Yukon_G50.exe: C_EXECUTABLE_LINKER__Yukon_G50_Debug CMakeFiles/Yukon_G50.dir/main.c.obj\r\n  FLAGS = -g\r\n  LINK_LIBRARIES = -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32\r\n  OBJECT_DIR = CMakeFiles\\Yukon_G50.dir\r\n  POST_BUILD = cd .\r\n  PRE_LINK = cd .\r\n  TARGET_COMPILE_PDB = CMakeFiles\\Yukon_G50.dir\\\r\n  TARGET_FILE = Yukon_G50.exe\r\n  TARGET_IMPLIB = libYukon_G50.dll.a\r\n  TARGET_PDB = Yukon_G50.pdb\r\n\r\n\r\n#############################################\r\n# Utility command for edit_cache\r\n\r\nbuild CMakeFiles/edit_cache.util: CUSTOM_COMMAND\r\n  COMMAND = cmd.exe /C \"cd /D C:\\Users\\emil1\\OneDrive\\Documents\\GitHub\\Yukon-G50\\cmake-build-debug && \"C:\\Program Files\\JetBrains\\CLion 2022.1\\bin\\cmake\\win\\bin\\cmake.exe\" -E echo \"No interactive CMake dialog available.\"\"\r\n  DESC = No interactive CMake dialog available...\r\n  restat = 1\r\n\r\nbuild edit_cache: phony CMakeFiles/edit_cache.util\r\n\r\n\r\n#############################################\r\n# Utility command for rebuild_cache\r\n\r\nbuild CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND\r\n  COMMAND = cmd.exe /C \"cd /D C:\\Users\\emil1\\OneDrive\\Documents\\GitHub\\Yukon-G50\\cmake-build-debug && \"C:\\Program Files\\JetBrains\\CLion 2022.1\\bin\\cmake\\win\\bin\\cmake.exe\" --regenerate-during-build -SC:\\Users\\emil1\\OneDrive\\Documents\\GitHub\\Yukon-G50 -BC:\\Users\\emil1\\OneDrive\\Documents\\GitHub\\Yukon-G50\\cmake-build-debug\"\r\n  DESC = Running CMake to regenerate build system...\r\n  pool = console\r\n  restat = 1\r\n\r\nbuild rebuild_cache: phony CMakeFiles/rebuild_cache.util\r\n\r\n# =============================================================================\r\n# Target aliases.\r\n\r\nbuild Yukon_G50: phony Yukon_G50.exe\r\n\r\n# =============================================================================\r\n# Folder targets.\r\n\r\n# =============================================================================\r\n\r\n#############################################\r\n# Folder: C:/Users/emil1/OneDrive/Documents/GitHub/Yukon-G50/cmake-build-debug\r\n\r\nbuild all: phony Yukon_G50.exe\r\n\r\n# =============================================================================\r\n# Built-in targets\r\n\r\n\r\n#############################################\r\n# Re-run CMake if any of its inputs changed.\r\n\r\nbuild build.ninja: RERUN_CMAKE | ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompilerABI.c C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCompilerIdDetection.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompileFeatures.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerId.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeFindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitIncludeInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitLinkInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseLibraryArchitecture.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystem.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCompilerCommon.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ADSP-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMCC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/AppleClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Borland-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Bruce-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompilerInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Compaq-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Cray-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Embarcadero-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Fujitsu-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GHS-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-FindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/HP-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IAR-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Intel-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/MSVC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVHPC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVIDIA-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PGI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PathScale-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SCO-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SDCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SunPro-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Watcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XL-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XLClang-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/zOS-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Internal/FeatureTesting.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeRCCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake\r\n  pool = console\r\n\r\n\r\n#############################################\r\n# A missing CMake input file is not an error.\r\n\r\nbuild ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompilerABI.c C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCompilerIdDetection.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompileFeatures.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerId.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeFindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitIncludeInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitLinkInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseLibraryArchitecture.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystem.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCompilerCommon.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ADSP-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMCC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/AppleClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Borland-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Bruce-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompilerInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Compaq-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Cray-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Embarcadero-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Fujitsu-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GHS-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-FindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/HP-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IAR-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Intel-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/MSVC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVHPC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVIDIA-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PGI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PathScale-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SCO-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SDCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SunPro-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Watcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XL-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XLClang-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/zOS-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Internal/FeatureTesting.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeRCCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake: phony\r\n\r\n\r\n#############################################\r\n# Clean all the built files.\r\n\r\nbuild clean: CLEAN\r\n\r\n\r\n#############################################\r\n# Print all primary targets available.\r\n\r\nbuild help: HELP\r\n\r\n\r\n#############################################\r\n# Make the all target the default.\r\n\r\ndefault all\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
--- a/cmake-build-debug/build.ninja	(revision cac7159cf208339142ade76aae58e2bfe4fed8f3)
+++ b/cmake-build-debug/build.ninja	(date 1652176888864)
@@ -54,8 +54,6 @@
   FLAGS = -g -std=gnu99
   OBJECT_DIR = CMakeFiles\Yukon_G50.dir
   OBJECT_FILE_DIR = CMakeFiles\Yukon_G50.dir
-  TARGET_COMPILE_PDB = CMakeFiles\Yukon_G50.dir\
-  TARGET_PDB = Yukon_G50.pdb
 
 
 # =============================================================================
@@ -71,10 +69,9 @@
   OBJECT_DIR = CMakeFiles\Yukon_G50.dir
   POST_BUILD = cd .
   PRE_LINK = cd .
-  TARGET_COMPILE_PDB = CMakeFiles\Yukon_G50.dir\
   TARGET_FILE = Yukon_G50.exe
   TARGET_IMPLIB = libYukon_G50.dll.a
-  TARGET_PDB = Yukon_G50.pdb
+  TARGET_PDB = Yukon_G50.exe.dbg
 
 
 #############################################
@@ -121,14 +118,14 @@
 #############################################
 # Re-run CMake if any of its inputs changed.
 
-build build.ninja: RERUN_CMAKE | ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompilerABI.c C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCompilerIdDetection.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompileFeatures.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerId.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeFindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitIncludeInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitLinkInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseLibraryArchitecture.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystem.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCompilerCommon.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ADSP-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMCC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/AppleClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Borland-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Bruce-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompilerInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Compaq-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Cray-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Embarcadero-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Fujitsu-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GHS-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-FindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/HP-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IAR-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Intel-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/MSVC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVHPC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVIDIA-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PGI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PathScale-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SCO-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SDCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SunPro-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Watcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XL-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XLClang-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/zOS-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Internal/FeatureTesting.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeRCCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake
+build build.ninja: RERUN_CMAKE | ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeRCCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake
   pool = console
 
 
 #############################################
 # A missing CMake input file is not an error.
 
-build ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCCompilerABI.c C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCompilerIdDetection.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompileFeatures.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineCompilerId.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeDetermineSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeFindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitIncludeInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseImplicitLinkInfo.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeParseLibraryArchitecture.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCCompiler.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystem.cmake.in C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestCompilerCommon.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeTestRCCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ADSP-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMCC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/ARMClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/AppleClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Borland-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Bruce-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Clang-DetermineCompilerInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Compaq-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Cray-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Embarcadero-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Fujitsu-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GHS-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-FindBinUtils.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/HP-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IAR-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Intel-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/MSVC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVHPC-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/NVIDIA-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PGI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/PathScale-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SCO-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SDCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/SunPro-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TI-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/Watcom-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XL-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/XLClang-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/zOS-C-DetermineCompiler.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Internal/FeatureTesting.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeRCCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake: phony
+build ../CMakeLists.txt C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeRCInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Compiler/GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU-C.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-GNU.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows-windres.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/Windows.cmake C$:/Program$ Files/JetBrains/CLion$ 2022.1/bin/cmake/win/share/cmake-3.22/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeRCCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake: phony
 
 
 #############################################
